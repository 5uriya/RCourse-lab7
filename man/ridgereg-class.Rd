% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ss.R, R/sss.R
\docType{class}
\name{ridgereg-class}
\alias{ridgereg-class}
\alias{ridgereg}
\alias{ridgereg-class}
\alias{ridgereg}
\title{Do you want to make a Ridge Regression?}
\description{
This function make a "Reference Class" with class=ridgereg for a Ridge Regression

This function creates a class \code{ridgereg} object which does ridge 
regression upon a specified formula and data.frame and parameter lambda.
Ridge regression is performed by QR decompsition. Plots are handled by 
packages \code{ggplot2}, \code{grid} and \code{gridExtra}.
}
\details{
This RC class generator can create a \code{ridgereg} object from any formula
as long as the response are not factors. The QR decomposition calculations 
are all done using matrices. The printouts are simple \code{paste} and 
\code{writeLines} calls for the most part, and are not objects. Every method 
returns something relevant.
}
\section{Fields}{

\describe{
\item{\code{formula}}{The formula for the model}

\item{\code{data}}{A object of class data.frame}

\item{\code{lambda}}{The lambda value}

\item{\code{formula}}{A formula taken as input, upon which linear regression is 
performed.}

\item{\code{data}}{A data.frame which has names to which the names in the formula 
refer.}

\item{\code{dataname}}{A character string containing the name of the data.}

\item{\code{lambda}}{A numeric scalar which specifies the hyperparameter lambda}

\item{\code{coefficients}}{A single column matrix consisting of the calculated 
regression coefficients of the linear model.}

\item{\code{predicted}}{A vector containing the linearly predicted 
response.}
}}

\section{Methods}{

\describe{
\item{\code{coeff()}}{Returns a named vector of the regression coefficients in the linear model.}

\item{\code{initialize(formula, data, lambda)}}{From inputs formula and data, generates all the other fields upon object initialization.}

\item{\code{predict(newframe = NULL)}}{Returns the predicted values of the linear model. Can also take a new NAMED data.frame
with covariate values and make new prediction based on them. New NAMED data frame must have same
column order as the data frame in field data.}

\item{\code{print()}}{Gives a printout of the call as well as the calculated regression coefficients.}

\item{\code{coeff()}}{Returns a named vector of the regression coefficients in the linear model.}

\item{\code{initialize(formula, data, lambda)}}{From inputs formula and data, generates all the other fields upon object initialization.}

\item{\code{predict(newframe = NULL)}}{Returns the predicted values of the linear model. Can also take a new NAMED data.frame
with covariate values and make new prediction based on them. New NAMED data frame must have same
column order as the data frame in field data.}

\item{\code{print()}}{Gives a printout of the call as well as the calculated regression coefficients.}
}}

\examples{
data(iris)
ridgereg$new(Petal.Length~Sepal.Width+Sepal.Length, data=iris,0.5)$print()
ridgereg$new(Petal.Length~Sepal.Width+Sepal.Length, data=iris,0.5)$predict()
ridgereg$new(Petal.Length~Sepal.Width+Sepal.Length, data=iris,0.5)$coef()
data(faithful)
ridgeobject <- ridgereg(formula = eruptions ~ waiting, data = faithful,lambda = 5)
ridgeobject$print()
}
\references{
\url{http://en.wikipedia.org/wiki/Tikhonov_regularization}
}
